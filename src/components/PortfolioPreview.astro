---
//import type { CollectionEntry } from 'astro:content';

interface Props {
  project: {
    id: string;
    title: string;
    skills: string[];
    img: string;
    img_alt?: string;
  };
}
interface Props {
  lang: string;
  t: Record<string, any>;
}

const { lang, t, project } = Astro.props;
---

<a class="card" href={`/proyectos/${lang}/${project.id}`}>
  <span class="title">{project.title}</span>
  <div class="skills">
    {project.skills.map((skill) => (
      <span class="skill">{skill}</span>
    ))}
  </div>
  <img src={project.img} alt={project.img_alt || ''} loading="lazy" decoding="async" />
</a>

<style>
	.card {
		display: grid;
		grid-template: auto 1fr / auto 1fr;
		height: 11rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		overflow: hidden;
		box-shadow: var(--shadow-sm);
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-sm);
		font-weight: 500;
		transition: box-shadow var(--theme-transition);
	}

	.card:hover {
		box-shadow: var(--shadow-md);
		transform: scale(1.1);
		background: var(--accent-subtle-overlay);
	}
	.card:hover .title{
		display: none;
	}
	.card:hover .skills{
		display: block;
		grid-area: 1 / 1 / 2 / 2;
		z-index: 1;
		margin:1rem;
	}
	.skill{
		padding: 0.5rem;
		background: var(--gray-999);
		color: var(--gray-200);
		border-radius: 0.375rem;
		margin:1rem 0.2rem;
	}

	.title {
		grid-area: 1 / 1 / 1 / 1;
		z-index: 1;
		margin: 1rem;
		padding: 0.2rem 0.5rem;
		background: var(--gray-999);
		color: var(--gray-200);
		border-radius: 0.375rem;
		width: max-content;
	}

	img {
		grid-area: 1 / 1 / 3 / 3;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	@media (min-width: 50em) {
		.card {
			height: 15rem;
			border-radius: 1.5rem;
		}

		.title {
			grid-area: 1 / 1 / 2 / 2;
			border-radius: 0.9375rem;
			padding: 0.5rem 0.8rem;
		}
		.skills{
			display: none;
		}
	}
</style>
