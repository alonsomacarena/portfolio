---
//import { projects } from "../../../data/projects";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import ContactCTA from "../../../components/ContactCTA.astro";
import Hero from "../../../components/Hero.astro";
import Icon from "../../../components/Icon.astro";

const { id, lang } = Astro.params;

// Cargar las traducciones segÃºn el idioma
const translations = await import(`../../../locales/${lang}.json`);
const t = translations.default;

// Cargar el proyecto correspondiente
const project = t.projects.find((p) => p.id === id);
if (!project) {
  throw new Error(`Proyecto con id "${id}" no encontrado.`);
}

export async function getStaticPaths() {
  const locales = ["es", "en"];

  const allPaths = await Promise.all(
    locales.map(async (lang) => {
      const translations = await import(`../../../locales/${lang}.json`);
      return translations.default.projects.map((project) => ({
        params: { id: project.id, lang },
      }));
    }),
  );

  return allPaths.flat();
}
---

<BaseLayout lang={lang} t={t} title={project.title}>
  <div class="stack gap-20 lg:gap-30">
    <div class="wrapper stack gap-8 lg:gap-20">
      <header class="hero">
        <a class="back-link" href=`/${lang}/proyectos`
          ><Icon icon="arrow-left" /> {t.projectsId.btnBack}</a
        >
        <Hero title={project.title} align="start" class="hero-row">
          {
            project.skills && Array.isArray(project.skills) && (
              <div class="skills">
                {project.skills.map((sl) => (
                  <li class="skill">{sl}</li>
                ))}
              </div>
            )
          }
        </Hero>
        <p class="description">{project.description}</p>
      </header>
    </div>
  </div>
  <main class="wrapper stack gap-20 lg:gap-30">
    <article class="project">
      <img
        src={project.img_mockup}
        alt={project.img_alt || project.title}
        loading="lazy"
        decoding="async"
      />

      {
        project.url && (
          <div class="project_url">
            <a href={project.url} target="_blank" rel="noopener noreferrer">
              {t.projectsId.btnVer}
            </a>
          </div>
        )
      }
    </article>

    <div class="cta_bottom">
      <ContactCTA lang={lang} t={t} />
    </div>
  </main>
</BaseLayout>

<style>
  .hero {
    width: 90%;
    margin: auto;
  }
  .skills {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    gap: 10px;
    list-style: none;
    margin-top: 10px;
  }
  .skill {
    font-size: var(--text-base);
    background: var(--gradient-accent);
    color: var(--accent-text-over);
    padding: 0.5rem 1rem;
    border-radius: 999rem;
    transition:
      color var(--theme-transition),
      background-color var(--theme-transition);
  }
  .description {
    font-size: var(--text-md);
    margin: 40px auto 20px auto;
    text-align: left;
  }
  .project {
    width: 90%;
    margin: auto;
    text-align: center;
  }
  .project img {
    width: 100%;
    max-width: 100%;
    margin: 0 auto;
  }

  .cta_bottom {
    align-self: center;
  }

  .project_url {
    margin-top: 5%;
  }

  .project_url a {
    font-size: var(--text-md);
  }

  @media (min-width: 50em) {
    .skills {
      margin-top: 0;
    }
    .project img {
      width: 50%;
      max-width: 50%;
    }
    .description {
      margin: 40px auto;
    }
    .project_url {
      margin-top: 2%;
    }
    .project_url a {
      font-size: var(--text-lg);
    }
  }
</style>
